//* In this project, SpotifyData, I created a table in SQLite and imported a CSV file from Kaggle of the "Spotify 
Top 50 songs in 2021" into an existing database and named the table BIT_DB.SpotifyData. Once I verified that everything 
downloaded correctly, I set out to answer a few questions via the following queries *//

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

1. Who are the most popular artists in 2021?

SELECT artist_name, track_name, popularity
FROM BIT_DB.SpotifyData
ORDER BY popularity DESC
LIMIT 10;

2. How does danceability of the song influence its popularity?

SELECT artist_name, track_name, popularity, danceability
FROM BIT_DB.SpotifyData
ORDER BY danceability DESC
LIMIT 5;

SELECT artist_name, track_name, popularity, danceability
FROM BIT_DB.SpotifyData
ORDER BY popularity DESC
LIMIT 5;

3. What are the best key and modality for a song to be "popular"?

SELECT artist_name, track_name, popularity, song_key, song_mode
FROM BIT_DB.SpotifyData
ORDER BY popularity DESC
LIMIT 10;

4. What is the average popularity of every artist? Label those with an average of 90 or above a "Top Star".

WITH popularity_average_CTE AS (
SELECT s.artist_name,
AVG(s.popularity) AS average_popularity
FROM SpotifyData s 
GROUP BY s.artist_name
)
 
SELECT  artist_name,
        average_popularity,
        'Top Star' AS tag
FROM popularity_average_CTE
WHERE average_popularity>=90;
